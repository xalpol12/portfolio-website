name: gh-pages deploy

on:
  push:
    branches: ["main", "deploy-pipeline"]


  workflow_dispatch:


permissions:
  contents: read
  pages: write
  id-token: write


concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules # path for node_modules folder
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        #  name of the chache key includes package-lock.json
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install modules
      if:
        steps.cache-nodemodules.outputs.cache-hit != 'true'
        # if cache hits the skip this step.
      run: npm ci

    - name: Ng build
      run: npm run build

    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ secrets.ACTIONS_SECRET }}
        output-file: "false"

    - name: Create Release
      uses: actions/create-release@v1
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_SECRET }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}

    - name: Deploy
      run: |
        npm run deploy
