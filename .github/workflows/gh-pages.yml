#name: Github Pages Deploy
#
#on:
#  push:
#    branches: ["main", "deploy-pipeline"]
#
#
#  workflow_dispatch:
#
#
#permissions:
#  contents: read
#  pages: write
#  id-token: write
#
#
#concurrency:
#  group: "pages"
#  cancel-in-progress: false
#
#
#jobs:
#  deploy:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v4
#
#    - name: Cache Node Modules
#      id: cache-npm
#      uses: actions/cache@v3
#      env:
#        cache-name: cache-node-modules
#      with:
#        path: ~/.npm
#        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#        restore-keys: |
#          ${{ runner.os }}-build-${{ env.cache-name }}-
#          ${{ runner.os }}-build-
#          ${{ runner.os }}-
#    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
#      name: List the state of node modules
#      continue-on-error: true
#      run: npm list
#
#
#    - name: Install Dependencies
#      run: npm install
#
#    - name: Build
#      run: npm run build
#
#    - name: Deploy
#      if: success()
#      uses: peaceiris/actions-gh-pages@v3
#      with:
#        github_token: ${{ secrets.ACTIONS_SECRET }}
#        publish_dir: dist/browser/portfolio-website
#        enable_jekyll: true

name: Github Pages Deploy

on:
  push:
    branches: ["main", "deploy-pipeline"]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build Angular app to prod
        working-directory: .
        run: npm install && npm run build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: .
          branch: deploy-pipeline
          token: ${{ secrets.ACTIONS_SECRET }}
